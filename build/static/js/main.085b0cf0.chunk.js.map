{"version":3,"sources":["HomeCards.js","datepicker/calendar.js","datepicker/App2.js","SearchBar.js","Header.js","Banner.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["HomeCards","className","src","Calendar","date","handleSelectDate","closeCalendar","useState","Date","selectedDate","setSelectedDate","setPreviousMonth","previousMonth","subMonths","startOfMonth","setNextMonth","nextMonth","addMonths","handleKeyPress","e","cb","charCode","tabIndex","onClick","onKeyPress","role","aria-label","icon","faAngleLeft","format","faAngleRight","id","onKeyDown","keyCode","shiftKey","endOfMonth","previousDay","subDays","setPreviousDay","previousWeek","subWeeks","setPreviousWeek","nextDay","addDays","setNextDay","nextWeek","addWeeks","setNextWeek","title","daysInMonth","getDaysInMonth","startWeekday","getDay","endWeekday","chunk","Array","from","length","fill","_","i","setDate","generateMonth","map","week","key","day","isEqual","dateString","handleDateSelection","aria-selected","getDate","App2","showCalendar","SearchBar","showDatepicker","setShowDatePicker","setShowCalendar","toggleCalendar","handleClick","type","placeholder","handleSelect","IconButton","Header","toggle","setToggle","navbar","setNavbar","window","addEventListener","scrollY","alt","label","Button","Avatar","Banner","variant","Home","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sVAqCeA,G,kBAlCG,WACd,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gCACX,yBAAKC,IAAI,kFAEb,yBAAKD,UAAU,uBACX,4CACA,iFAGR,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,gCACX,yBAAKC,IAAI,mGAEb,yBAAKD,UAAU,uBACX,kDACA,+FAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gCACX,yBAAKC,IAAI,+IAEb,yBAAKD,UAAU,uBACX,4CACA,gG,2PCsLLE,G,MA9LE,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAAoB,EACtBC,mBAAS,IAAIC,KAAKJ,IADI,mBACvDK,EADuD,KACzCC,EADyC,KAGxDC,EAAmB,WACvB,IAAMC,EAAgBC,YAAUJ,EAAc,GAC9CC,EAAgBI,YAAaF,KAGzBG,EAAe,WACnB,IAAMC,EAAYC,YAAUR,EAAc,GAC1CC,EAAgBI,YAAaE,KAGzBE,EAAiB,SAACC,EAAEC,GACxB,IAAMC,EAAWF,EAAEE,SACH,KAAbA,GAAgC,KAAbA,GACpBD,KA+FJ,OACE,yBAAKnB,UAAU,YACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAEb,yBACEA,UAAU,gBACVqB,SAAS,IACTC,QAASZ,EACTa,WAAY,SAACL,GAAD,OAAOD,EAAeC,EAAER,IACpCc,KAAK,SACLC,aAAW,kBAEX,kBAAC,IAAD,CAAiBC,KAAOC,QAG5B,yBAAK3B,UAAU,QAAQwB,KAAK,WAC1B,2BACGI,YAAOpB,EAAc,eAG1B,yBAAKR,UAAU,SACb,yBACEA,UAAU,gBACVqB,SAAS,IACTC,QAASR,EACTS,WAAY,SAACL,GAAD,OAAOD,EAAeC,EAAEJ,IACpCU,KAAK,SACLC,aAAW,aAEX,kBAAC,IAAD,CAAiBC,KAAOG,SAK9B,2BACEC,GAAG,OACHT,SAAS,IACTU,UAjFsB,SAACb,GAC3B,IAAMc,EAAUd,EAAEc,QAGFd,EAAEe,SAClB,OAAOD,GACL,KAAK,GAEH,YADA5B,EAAiBwB,YAAOpB,EAAc,eAExC,KAAK,GAEH,YADAH,IAEF,KAAK,GAEH,YADAD,EAAiBwB,YAAOpB,EAAc,eAExC,KAAK,GAEH,YAhCJC,EAAgByB,YAAW1B,IAiCzB,KAAK,GAEH,YAvCJC,EAAgBI,YAAaL,IAwC3B,KAAK,GAEH,YAvEiB,WACrB,IAAM2B,EAAcC,YAAQ5B,EAAc,GAC1CC,EAAgB0B,GAoEZE,GAEF,KAAK,GAEH,YAhEkB,WACtB,IAAMC,EAAeC,YAAS/B,EAAc,GAC5CC,EAAgB6B,GA6DZE,GAEF,KAAK,GAEH,YAxEa,WACjB,IAAMC,EAAUC,YAAQlC,EAAc,GACtCC,EAAgBgC,GAqEZE,GAEF,KAAK,GAEH,YAjEc,WAClB,IAAMC,EAAWC,YAASrC,EAAc,GACxCC,EAAgBmC,GA8DZE,GAEF,QACE,SAgDAtB,KAAK,OACLC,aAAW,SAEX,+BACE,wBAAIzB,UAAU,cAAcwB,KAAK,OAC/B,wBAAIxB,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,UAAS,0BAAMsB,MAAM,UAAZ,OAC1E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,UAAS,0BAAMsB,MAAM,UAAZ,OAC1E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,WAAU,0BAAMsB,MAAM,WAAZ,OAC3E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,aAAY,0BAAMsB,MAAM,aAAZ,OAC7E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,YAAW,0BAAMsB,MAAM,YAAZ,OAC5E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,UAAS,0BAAMsB,MAAM,UAAZ,OAC1E,wBAAI/C,UAAU,oBAAoBwB,KAAK,eAAeC,aAAW,YAAW,0BAAMsB,MAAM,YAAZ,SAGhF,2BAAO/C,UAAU,cA5GD,WACpB,IAAMgD,EAAcC,YAAezC,GAC7B0C,EAAeC,YAAOtC,YAAaL,IACnC4C,EAAaD,YAAOjB,YAAW1B,IAMrC,OALiB6C,gBAAM,GAAD,mBACjBC,MAAMC,KAAK,CAAEC,OAAQN,IAAgBO,KAAK,OADzB,YAEjBH,MAAMC,KAAK,CAAEC,OAAQR,IAAe,SAACU,EAAEC,GAAH,OAASC,YAAQpD,EAAcmD,EAAE,OAFpD,YAGjBL,MAAMC,KAAK,CAAEC,OAAS,EAAEJ,IAAeK,KAAK,QAC9C,GAqGII,GAAgBC,KAAI,SAACC,EAAKJ,GAAN,OACnB,wBAAI3D,UAAU,OAAOgE,IAAG,eAAUL,GAAKnC,KAAK,OACxCuC,EAAKD,KAAI,SAACG,EAAIN,GAAL,OACTM,EAEE,wBACEjE,UAAS,cAASkE,YAAQ1D,EAAcyD,GAAO,UAAY,IAC3DD,IAAG,mBAAcL,GACjBrC,QAAS,kBAnEC,SAACnB,GAC3B,IAAMgE,EAAavC,YAAOzB,EAAM,cAChCC,EAAiB+D,GAiEcC,CAAoBH,IACnCzC,KAAK,WACL6C,gBAAeH,YAAQ1D,EAAcyD,IAEpCK,YAAQL,IAGX,wBAAIjE,UAAU,QAAQgE,IAAG,mBAAcL,IAAvC,oBCzLHY,EAXF,SAAC,GAA8D,IAA3DlE,EAA0D,EAA1DA,cAAeD,EAA2C,EAA3CA,iBAAkBD,EAAyB,EAAzBA,KAAMqE,EAAmB,EAAnBA,aAEtD,OACE,yBAAKxE,UAAU,OAAOwB,KAAK,eACxBgD,GACC,kBAAC,EAAD,CAAUrE,KAAMA,EAAMC,iBAAkBA,EAAkBC,cAAeA,MC2ElEoE,EA/EG,WAAO,IAAD,EACwBnE,oBAAS,GADjC,mBACboE,EADa,KACGC,EADH,OAEoBrE,oBAAS,GAF7B,mBAEbkE,EAFa,KAECI,EAFD,OAGItE,mBAASsB,YAAO,IAAIrB,KAAQ,eAHhC,mBAGbJ,EAHa,KAGPyD,EAHO,KAKdiB,EAAiB,SAAC3D,GACpByD,GAAkB,GAClBC,GAAgB,IAcdE,EAAc,WAChBF,GAAiBJ,IAGrB,OACI,6BACI,0BAAMxE,UAAU,aACZ,yBAAKA,UAAU,uBACX,wCACA,2BACI+E,KAAK,OAAO/E,UAAU,2BACtBgF,YAAY,0BAGpB,6BACA,yBAAKhF,UAAU,qBACX6E,eAAgBA,EAChBI,aAAcJ,EACdvD,QAASwD,GAEL,wCACA,2BAAI3E,IAEZ,6BACA,yBAAKH,UAAU,sBACX6E,eAAgBA,EAChBI,aAAcJ,EACdvD,QAASwD,GAEL,yCACA,2BAAI3E,IAGZ,6BACA,yBAAKH,UAAU,qBACX,sCACA,0CAEJ,oCACA,kBAACkF,EAAA,EAAD,CAAYlF,UAAU,qBAClB,kBAAC,IAAD,CAAYA,UAAU,6BAK7BwE,GAAgB,kBAAC,EAAD,CACbS,aAAcJ,EACdA,eAAgBA,EAChBzE,iBA3Da,SAACD,GACtByD,EAAQzD,GACRwE,GAAkB,GAClBC,GAAgB,IAyDRvE,cAtDU,WAClBsE,GAAkB,GAClBC,GAAgB,IAqDRF,eAAgBA,EAChBvE,KAAMA,EACNqE,aAAcA,MCGfW,EA1EA,WAAO,IAAD,EACW7E,oBAAS,GADpB,mBACV8E,EADU,KACFC,EADE,OAEW/E,oBAAS,GAFpB,mBAEVgF,EAFU,KAEFC,EAFE,KAcjB,OAFAC,OAAOC,iBAAiB,UARJ,WACbD,OAAOE,SAAU,GACpBH,GAAU,GAENA,GAAU,MAOd,oCACA,yBAAKvF,UAAWsF,EAAS,iBAAmB,iBACxC,yBACItF,UAAWsF,EAAS,eAAiB,YACrCrF,IAAI,2HACJ0F,IAAI,gBAER,yBACI3F,UAAU,eACVC,IAAI,kEAEPqF,EAAS,yBAAKtF,UAAU,kBACT,2BACIgF,YAAY,oBACZY,MAAM,WACNb,KAAK,OACL/E,UAAWsF,EAAS,UAAY,WAEpC,kBAAC,IAAD,OAGJ,yBAAKtF,UAAU,mBACX,6CACA,0CACA,kDAGhB,yBAAKA,UAAU,iBACX,kBAAC6F,EAAA,EAAD,KACI,uBAAG7F,UAAWsF,EAAS,UAAY,UAAnC,kBAIJ,kBAACO,EAAA,EAAD,CACIvE,QAAS,kBAAM+D,GAAWD,KACtB,kBAAC,IAAD,CACIpF,UAAWsF,EAAS,UAAY,WAEpC,kBAAC,IAAD,CACItF,UAAWsF,EAAS,UAAY,YAG3CF,GACG,yBAAKpF,UAAU,yBACX,4BACI,4CACA,qCAGZ,kBAACkF,EAAA,EAAD,CAAYlF,UAAU,kBAClB,kBAAC8F,EAAA,EAAD,CAAS9F,UAAU,sBAI/B,kBAAC,EAAD,QCzDO+F,EAfA,WAEX,OACI,yBAAK/F,UAAU,UACX,kBAAC,EAAD,MAEA,yBAAKA,UAAU,gBACX,uCACA,qGACA,kBAAC6F,EAAA,EAAD,CAAQG,QAAQ,YAAhB,qBCDDC,EATF,WACT,OACI,yBAAKjG,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCMGkG,MARf,WACE,OACE,yBAAKlG,UAAU,OACb,kBAAC,EAAD,QCEcmG,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.085b0cf0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './HomeCards.css'\r\n\r\nconst HomeCards = () => {\r\n    return (\r\n        <div className=\"homeCards\">\r\n            <div className=\"homeCards__card\">\r\n                <div className=\"homeCards__cardImg card_Img1\">\r\n                    <img src=\"https://i.pinimg.com/originals/1b/be/21/1bbe21275d2cb7055448696be4ab27b8.jpg\" />\r\n                </div>\r\n                <div className=\"homeCards__cardInfo\">\r\n                    <h3>Unique Stays</h3>\r\n                    <p>Spaces that are more than just a place to sleep.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"homeCards__card middle\">\r\n                <div className=\"homeCards__cardImg card_Img2\">\r\n                    <img src=\"http://www.magiciancardtricks.com/uploads/5/6/4/1/5641235/s431054849200788171_p4_i2_w640.jpeg\"/>\r\n                </div>\r\n                <div className=\"homeCards__cardInfo\">\r\n                    <h3>Online Experiences</h3>\r\n                    <p>Unique activities we can do together, led by a world of hosts.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"homeCards__card\">\r\n                <div className=\"homeCards__cardImg card_Img3\">\r\n                    <img src=\"https://images.adsttc.com/media/images/5be9/fd5c/08a5/e5a5/8c00/008f/slideshow/CARLES_FAUS_ARQUITECTURA_-_CARMEN_HOUSE_(2).jpg?1542061390\"/>\r\n                </div>\r\n                <div className=\"homeCards__cardInfo\">\r\n                    <h3>Entire homes</h3>\r\n                    <p>Comfortable private places, with room for friends or family.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeCards\r\n","import React, { useState } from 'react';\r\nimport {\r\n  format,\r\n  startOfMonth,\r\n  subMonths,\r\n  addMonths,\r\n  getDaysInMonth,\r\n  getDay,\r\n  endOfMonth,\r\n  setDate,\r\n  getDate,\r\n  isEqual,\r\n  subWeeks,\r\n  addWeeks,\r\n  subDays,\r\n  addDays\r\n} from 'date-fns';\r\nimport { chunk } from 'lodash';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport './App2.css';\r\n\r\nconst Calendar = ({ date, handleSelectDate, closeCalendar }) => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date(date));\r\n\r\n  const setPreviousMonth = () => {\r\n    const previousMonth = subMonths(selectedDate, 1);\r\n    setSelectedDate(startOfMonth(previousMonth));\r\n  }\r\n\r\n  const setNextMonth = () => {\r\n    const nextMonth = addMonths(selectedDate, 1);\r\n    setSelectedDate(startOfMonth(nextMonth));\r\n  }\r\n\r\n  const handleKeyPress = (e,cb) => {\r\n    const charCode = e.charCode\r\n    if(charCode === 13 || charCode === 32) {\r\n      cb();\r\n    }\r\n  }\r\n\r\n  const setPreviousDay = () => {\r\n    const previousDay = subDays(selectedDate, 1);\r\n    setSelectedDate(previousDay);\r\n  }\r\n\r\n  const setNextDay = () => {\r\n    const nextDay = addDays(selectedDate, 1);\r\n    setSelectedDate(nextDay);\r\n  }\r\n\r\n  const setPreviousWeek = () => {\r\n    const previousWeek = subWeeks(selectedDate, 1);\r\n    setSelectedDate(previousWeek);\r\n  }\r\n\r\n  const setNextWeek = () => {\r\n    const nextWeek = addWeeks(selectedDate, 1);\r\n    setSelectedDate(nextWeek);\r\n  }\r\n\r\n  const setDatePreviousMonth = () => {\r\n    setSelectedDate(subMonths(selectedDate, 1));\r\n  }\r\n\r\n  const setDateNextMonth = () => {\r\n    setSelectedDate(addMonths(selectedDate, 1));\r\n  }\r\n\r\n  const setMonthStart = () => {\r\n    setSelectedDate(startOfMonth(selectedDate));\r\n  }\r\n\r\n  const setMonthEnd = () => {\r\n    setSelectedDate(endOfMonth(selectedDate));\r\n  }\r\n\r\n  const generateMonth = () => {\r\n    const daysInMonth = getDaysInMonth(selectedDate);\r\n    const startWeekday = getDay(startOfMonth(selectedDate));\r\n    const endWeekday = getDay(endOfMonth(selectedDate));\r\n    const gridDays = chunk([\r\n      ...Array.from({ length: startWeekday }).fill(null),\r\n      ...Array.from({ length: daysInMonth }, (_,i) => setDate(selectedDate, i+1)),\r\n      ...Array.from({ length: (6-endWeekday) }).fill(null)\r\n    ], 7);\r\n    return gridDays;\r\n  }\r\n\r\n  const handleTableKeyPress = (e) => {\r\n    const keyCode = e.keyCode;\r\n    // Check if control key was pressed\r\n    // const control = e.ctrlKey;\r\n    const control = e.shiftKey;\r\n    switch(keyCode) {\r\n      case 13: //Enter\r\n        handleSelectDate(format(selectedDate, \"yyyy-MM-dd\"));\r\n        return;\r\n      case 27: //Esc\r\n        closeCalendar();\r\n        return;\r\n      case 32: //Space\r\n        handleSelectDate(format(selectedDate, \"yyyy-MM-dd\"));\r\n        return;\r\n      case 35: //End\r\n        setMonthEnd();\r\n        return;\r\n      case 36: //Home\r\n        setMonthStart();\r\n        return;\r\n      case 37: //Left\r\n        setPreviousDay();\r\n        return;\r\n      case 38: //Up\r\n        setPreviousWeek();\r\n        return;\r\n      case 39: //Right\r\n        setNextDay();\r\n        return;\r\n      case 40: //Down\r\n        setNextWeek();\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const handleDateSelection = (date) => {\r\n    const dateString = format(date, \"yyyy-MM-dd\");\r\n    handleSelectDate(dateString);\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"title\">\r\n        <div className=\"icons\">\r\n          \r\n          <div\r\n            className=\"iconContainer\"\r\n            tabIndex=\"0\"\r\n            onClick={setPreviousMonth}\r\n            onKeyPress={(e) => handleKeyPress(e,setPreviousMonth)}\r\n            role=\"button\"\r\n            aria-label=\"Previous month\"\r\n          >\r\n            <FontAwesomeIcon icon={ faAngleLeft } />\r\n          </div>\r\n        </div>\r\n        <div className=\"month\" role=\"heading\">\r\n          <b>\r\n            {format(selectedDate, \"MMMM yyyy\")}\r\n          </b>\r\n        </div>\r\n        <div className=\"icons\">\r\n          <div\r\n            className=\"iconContainer\"\r\n            tabIndex=\"0\"\r\n            onClick={setNextMonth}\r\n            onKeyPress={(e) => handleKeyPress(e,setNextMonth)}\r\n            role=\"button\"\r\n            aria-label=\"Next year\"\r\n          >\r\n            <FontAwesomeIcon icon={ faAngleRight } />\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <table\r\n        id=\"grid\"\r\n        tabIndex=\"0\"\r\n        onKeyDown={handleTableKeyPress}\r\n        role=\"grid\"\r\n        aria-label=\"Month\"\r\n      >\r\n        <thead>\r\n          <tr className=\"header_week\" role=\"row\">\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Sunday\"><abbr title=\"Sunday\">Su</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Monday\"><abbr title=\"Monday\">Mo</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Tuesday\"><abbr title=\"Tuesday\">Tu</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Wednesday\"><abbr title=\"Wednesday\">We</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Thursday\"><abbr title=\"Thursday\">Th</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Friday\"><abbr title=\"Friday\">Fr</abbr></th>\r\n            <th className=\"header_datepicker\" role=\"columnheader\" aria-label=\"Saturday\"><abbr title=\"Saturday\">Sa</abbr></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"table_body\">\r\n          {generateMonth().map((week,i) => (\r\n            <tr className=\"week\" key={`week-${i}`} role=\"row\">\r\n              { week.map((day,i) => (\r\n                day\r\n                  ?\r\n                  <td\r\n                    className={`cell${isEqual(selectedDate, day) ? ' active' : ''}`}\r\n                    key={`day-cell-${i}`}\r\n                    onClick={() => handleDateSelection(day)}\r\n                    role=\"gridcell\"\r\n                    aria-selected={isEqual(selectedDate, day)}\r\n                  >\r\n                    {getDate(day)}\r\n                  </td>\r\n                  :\r\n                  <td className=\"empty\" key={`day-cell-${i}`}>&nbsp;</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from 'react';\r\n\r\nimport Calendar from \"./calendar\";\r\n\r\nimport './App2.css';\r\n\r\nconst App2 = ({  closeCalendar, handleSelectDate, date, showCalendar }) => {\r\n  \r\n  return (\r\n    <div className=\"App2\" role=\"application\">\r\n      {showCalendar && (\r\n        <Calendar date={date} handleSelectDate={handleSelectDate} closeCalendar={closeCalendar} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App2;\r\n","import React, {useState} from 'react'\r\nimport './SearchBar.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport App2 from './datepicker/App2'\r\nimport { format } from 'date-fns';\r\n\r\nconst SearchBar = () => {\r\n    const [showDatepicker, setShowDatePicker] = useState(true);\r\n    const [showCalendar, setShowCalendar] = useState(false);\r\n    const [date, setDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\r\n\r\n    const toggleCalendar = (e) => {\r\n        setShowDatePicker(false);\r\n        setShowCalendar(true);\r\n    }\r\n\r\n    const handleSelectDate = (date) => {\r\n        setDate(date);\r\n        setShowDatePicker(true);\r\n        setShowCalendar(false);\r\n    }\r\n\r\n    const closeCalendar = () => {\r\n        setShowDatePicker(true);\r\n        setShowCalendar(false);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setShowCalendar(!showCalendar)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className='searchBar'>\r\n                <div className=\"searchBar__location\">\r\n                    <h5>Location</h5>\r\n                    <input\r\n                        type=\"text\" className=\"searchBar__locationInput\"\r\n                        placeholder=\"Where are you going?\"\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"searchBar__checkIn\"\r\n                    toggleCalendar={toggleCalendar}\r\n                    handleSelect={toggleCalendar}\r\n                    onClick={handleClick}\r\n                    >\r\n                        <h5>Check in</h5>\r\n                        <p>{date}</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"searchBar__checkOut\"\r\n                    toggleCalendar={toggleCalendar}\r\n                    handleSelect={toggleCalendar}\r\n                    onClick={handleClick}\r\n                    >\r\n                        <h5>Check out</h5>\r\n                        <p>{date}</p>\r\n                        \r\n                </div>\r\n                <hr />\r\n                <div className=\"searchBar__guests\">\r\n                    <h5>Guests</h5>\r\n                    <p>Add guests</p>\r\n                </div>\r\n                <>\r\n                <IconButton className=\"searchBar__button\">\r\n                    <SearchIcon className=\"searchBar__buttonIcon\"/>\r\n                </IconButton>\r\n                </>\r\n                \r\n            </form>\r\n            {showCalendar && <App2\r\n                handleSelect={toggleCalendar}\r\n                toggleCalendar={toggleCalendar}\r\n                handleSelectDate={handleSelectDate}\r\n                closeCalendar={closeCalendar}\r\n                showDatepicker={showDatepicker}\r\n                date={date}\r\n                showCalendar={showCalendar}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, {useState} from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Avatar, Button } from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchBar from './SearchBar'\r\n\r\nconst Header = () => {\r\n    const [toggle, setToggle] = useState(false)\r\n    const [navbar, setNavbar] = useState(false)\r\n\r\n    const changeStyle = () => {\r\n       if (window.scrollY >=80) {\r\n        setNavbar(true) \r\n        } else {\r\n            setNavbar(false)\r\n        }\r\n    } \r\n\r\n    window.addEventListener('scroll', changeStyle)\r\n\r\n    return (\r\n        <>\r\n        <div className={navbar ? \"header passive\" : \"header active\"} >\r\n            <img \r\n                className={navbar ? \"header__icon\" : \"noDisplay\"} \r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Airbnb_Logo_B%C3%A9lo.svg/1200px-Airbnb_Logo_B%C3%A9lo.svg.png\"\r\n                alt=\"airbnb logo\"\r\n            />\r\n            <img \r\n                className=\"header__icon\"\r\n                src=\"https://www.uokpl.rs/fpng/f/422-4227907_airbnb-logo-white.png\" \r\n            />\r\n            {navbar ? <div className=\"header__center\">\r\n                            <input \r\n                                placeholder=\"Start your search\"\r\n                                label=\"location\" \r\n                                type=\"text\" \r\n                                className={navbar ? \"passive\" : \"active\"}\r\n                            />\r\n                            <SearchIcon />\r\n                        </div>\r\n                        :\r\n                        <div className=\"header__center2\">\r\n                            <p>Places to stay</p>\r\n                            <p>Experiences</p>\r\n                            <p>Online Experiences</p>\r\n                        </div> }\r\n\r\n            <div className=\"header__right\">\r\n                <Button>\r\n                    <p className={navbar ? \"passive\" : \"active\"}>\r\n                            Become a host\r\n                    </p>\r\n                </Button>\r\n                <Button \r\n                    onClick={() => setToggle(!toggle)} >\r\n                        <LanguageIcon\r\n                            className={navbar ? \"passive\" : \"active\"}\r\n                        />\r\n                        <ExpandMoreIcon \r\n                            className={navbar ? \"passive\" : \"active\"}\r\n                        />\r\n                </Button>\r\n                {toggle && \r\n                    <div className=\"header__globe passive\">\r\n                        <ul>\r\n                            <li>English (US)</li>\r\n                            <li>USD</li>\r\n                        </ul>\r\n                    </div>}\r\n                <IconButton className=\"avatar__button\">\r\n                    <Avatar  className=\"header__avatar\" />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n        <SearchBar />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState} from 'react'\r\nimport './Banner.css'\r\nimport { Button } from '@material-ui/core'\r\nimport Header from './Header'\r\nimport SearchBar from './SearchBar'\r\n\r\nconst Banner = () => {\r\n    \r\n    return (\r\n        <div className=\"banner\" >\r\n            <Header />\r\n            \r\n            <div className=\"banner__info\">\r\n                <h1>Go Near</h1>\r\n                <h5>Settle in somewhere new. Discover stays to live, work, or just relax.</h5>\r\n                <Button variant=\"outlined\">Explore Nearby</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport HomeCards from './HomeCards'\r\nimport Banner from './Banner'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Banner />\r\n            <HomeCards />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header'\r\nimport SearchBar from './SearchBar'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}